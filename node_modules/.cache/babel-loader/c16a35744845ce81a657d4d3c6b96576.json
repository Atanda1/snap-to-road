{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/projects/tomtom-graphql/src/components/SnapToRoad.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_FIELDS = gql`\n  query AllFields {\n    projectedPoints {\n        type,\n        geometry {\n            type,\n            coordinates\n        }\n        ,\n        properties {\n            routeIndex\n        }\n    }\n    ,\n    route {\n        type,\n        geometry {\n            type,\n            coordinates\n        }\n        ,\n        properties {\n            id,\n            speedRestrictions {\n                maximumSpeed {\n                    value,\n                    unit\n                }\n            }\n        }\n    }\n}\n`;\n\nfunction TheFields() {\n  _s();\n\n  //const initialCount = 0;\n  const fields = useQuery(ALL_FIELDS);\n\n  const fieldDetails = () => {\n    console.log(fields);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: fieldDetails,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TheFields, \"3CnUIoIXJq383hDtCpRAw7L43Mw=\", false, function () {\n  return [useQuery];\n});\n\n_c = TheFields;\nexport default TheFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheFields\");","map":{"version":3,"names":["React","useState","gql","useQuery","ALL_FIELDS","TheFields","fields","fieldDetails","console","log"],"sources":["/Users/david/Documents/projects/tomtom-graphql/src/components/SnapToRoad.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\n\nconst ALL_FIELDS = gql`\n  query AllFields {\n    projectedPoints {\n        type,\n        geometry {\n            type,\n            coordinates\n        }\n        ,\n        properties {\n            routeIndex\n        }\n    }\n    ,\n    route {\n        type,\n        geometry {\n            type,\n            coordinates\n        }\n        ,\n        properties {\n            id,\n            speedRestrictions {\n                maximumSpeed {\n                    value,\n                    unit\n                }\n            }\n        }\n    }\n}\n`;\n\nfunction TheFields() {\n  //const initialCount = 0;\n  const fields = useQuery(ALL_FIELDS);\n\n    const fieldDetails = () => {\n      console.log(fields);\n    };\n\n  return (\n    <div>\n      <div onClick={fieldDetails}>Click me</div>\n    </div>\n  );\n}\n\nexport default TheFields;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhCA;;AAkCA,SAASG,SAAT,GAAqB;EAAA;;EACnB;EACA,MAAMC,MAAM,GAAGH,QAAQ,CAACC,UAAD,CAAvB;;EAEE,MAAMG,YAAY,GAAG,MAAM;IACzBC,OAAO,CAACC,GAAR,CAAYH,MAAZ;EACD,CAFD;;EAIF,oBACE;IAAA,uBACE;MAAK,OAAO,EAAEC,YAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAbQF,S;UAEQF,Q;;;KAFRE,S;AAeT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}